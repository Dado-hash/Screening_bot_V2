name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: dev_password
          POSTGRES_DB: screeningbot_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install development tools
      run: |
        pip install flake8 black pytest
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
    
    - name: Test imports
      run: |
        python -c "import sys; sys.path.append('src')"
        python -m py_compile src/data_fetchers/*.py
        python -m py_compile src/analyzers/*.py
    
    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=. --cov-report=xml
      env:
        DB_HOST: localhost
        DB_NAME: screeningbot_test
        DB_USER: postgres
        DB_PASSWORD: dev_password
        DB_PORT: 5432
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
